{
  "active": false,
  "connections": {
    "Split Out Video Prompts": {
      "main": [
        []
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Podcast Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Podcast Agent": {
      "main": [
        [
          {
            "node": "Generate audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Veo Generate": {
      "main": [
        [
          {
            "node": "Veo Poll",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Done": {
      "main": [
        [
          {
            "node": "Download Video",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Wait 10s",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 10s": {
      "main": [
        [
          {
            "node": "Veo Poll",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Veo Poll": {
      "main": [
        [
          {
            "node": "IF Done",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload your file here": {
      "main": [
        [
          {
            "node": "Insert Data to Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert Data to Store",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Query Data Tool",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert Data to Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Podcast Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Query Data Tool": {
      "ai_tool": [
        [
          {
            "node": "Podcast Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-29T12:35:41.932Z",
  "id": "h4QnCCY17P2CHxlX",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Audio Podcast",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        1552,
        144
      ],
      "id": "dc1c4631-b6f7-4b71-a68d-d30917b4cc64",
      "name": "Split Out Video Prompts"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst videosData = items.map((item, index) => {\n  if (!item.binary || !item.binary.data) {\n    throw new Error(`Video ${index} no tiene binary data`);\n  }\n  \n  return {\n    json: {\n      videoIndex: index,\n      fileName: `video_${index}.mp4`,\n      mimeType: 'video/mp4'\n    },\n    binary: {\n      data: item.binary.data\n    }\n  };\n});\n\nreturn videosData;"
      },
      "name": "Extraer Binary Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2432,
        240
      ],
      "id": "6e508913-f8b6-4883-a622-ebb266f21b84"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        960,
        336
      ],
      "id": "56fb5fde-4d1f-4656-985e-aeba6c5079cd",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Video podcast",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Tienes acceso a información proveniente de un PDF, que puede incluir texto académico, técnico o divulgativo. Tu tarea es usar esos datos (recuperados mediante RAG) para escribir el guion de un episodio de podcast entre dos personas que conversan sobre el contenido del PDF.\n\nInstrucciones del formato y estilo:\n\nEstructura narrativa clara:\n\nIntroducción breve (30-60 segundos): Presentación del tema y de los dos interlocutores.\n\nCuerpo central (3-5 secciones): Debate, explicaciones o análisis del contenido del PDF, con ejemplos, comparaciones o anécdotas para hacerlo ameno.\n\nCierre o reflexión final: Conclusión o mensaje que deje una idea clara o inspiradora.\n\nTono y ritmo:\n\nConversacional, dinámico, con ritmo fluido.\n\nIntercalar momentos de humor ligero, preguntas retóricas o ejemplos cotidianos.\n\nEvita lenguaje demasiado académico o denso: traduce conceptos difíciles en algo que suene a charla de podcast.\n\nFormato de salida:\n\nUsa etiquetas como [HOST] y [INVITADO] (o nombres si se prefieren).\n\nIncluye indicaciones breves de entonación o pausas cuando ayuden al ritmo (por ejemplo, [ríe], [pausa], [tono reflexivo]).\n\nRequisitos de contenido:\n\nCita o menciona información del PDF sin copiar textualmente. Reformula y explica con tus propias palabras.\n\nSi el PDF cubre varios temas, elige los más relevantes o interesantes para la conversación.\n\nSi hay términos técnicos, haz que uno de los interlocutores los aclare al otro.\n\nObjetivo final:\nCrear un guion que podría grabarse tal cual como episodio de podcast, que entretenga y enseñe al oyente mientras refleja la información clave del PDF.\n\nEstilo adicional (opcional, ajustable):\n\nDuración estimada: 8–12 minutos.\n\nTono: divulgativo, con energía positiva y complicidad entre los interlocutores.\n\nInspiración: podcasts como “Entiende Tu Mente”, “RadioLab”, o “The Daily” (adaptar al idioma).\n\nEntrada (contexto RAG):\n\nUsa el texto o fragmentos del PDF proporcionados en la base de conocimiento.\n\nSi no hay suficiente contexto, indica claramente qué partes requerirían más información.\n\nSalida esperada:\nUn guion completo del podcast, listo para locución, en formato de diálogo estructurado y fluido."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1184,
        336
      ],
      "id": "41afc577-62f7-4630-8606-27a217ca526f",
      "name": "Podcast Agent"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://generativelanguage.googleapis.com/v1beta/models/veo-3.0-generate-001:predictLongRunning",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-goog-api-key",
              "value": "AIzaSyAcYXvtzmOwO1FAXZZiKXDu5jwr0telckE"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n          \"instances\": [\n            {\n              \"prompt\": \"A close up of two people staring at a cryptic drawing on a wall, torchlight flickering. A man murmurs, \\\"This must be it. That's the secret code.\\\" The woman looks at him and whispers excitedly, \\\"What did you find?\\\"\"\n            }\n          ]\n        }",
        "options": {
          "response": {}
        }
      },
      "name": "Veo Generate",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1808,
        688
      ],
      "id": "57275aec-65ec-422c-b20f-b5fc3ab3616d"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.done }}",
              "operation": "equal",
              "value2": "true"
            }
          ]
        },
        "options": {}
      },
      "name": "IF Done",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2144,
        736
      ],
      "id": "cc5c9ef3-3fbf-4719-98bf-84dd47cdd747"
    },
    {
      "parameters": {
        "amount": 10
      },
      "name": "Wait 10s",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2368,
        736
      ],
      "id": "0dd75a86-b46a-4e54-8e2b-6ea0568ec0f5",
      "webhookId": "a11e28e0-eb41-4f59-b270-a21b45ea8cfa"
    },
    {
      "parameters": {
        "url": "={{ $('Veo Poll').item.json.response.generateVideoResponse.generatedSamples[0].video.uri }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-goog-api-key",
              "value": "AIzaSyAcYXvtzmOwO1FAXZZiKXDu5jwr0telckE"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "name": "Download Video",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2368,
        912
      ],
      "id": "de8f95fa-9a8b-4b74-a2cb-490cce1e9ad0"
    },
    {
      "parameters": {
        "url": "=https://generativelanguage.googleapis.com/v1beta/{{ $node['Veo Generate'].json.name }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-goog-api-key",
              "value": "AIzaSyAcYXvtzmOwO1FAXZZiKXDu5jwr0telckE"
            }
          ]
        },
        "options": {
          "response": {}
        }
      },
      "name": "Veo Poll",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1984,
        688
      ],
      "id": "a00522f7-c292-4218-a120-df7e32504ae6"
    },
    {
      "parameters": {
        "formTitle": "Upload your data to test RAG",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Upload your file(s)",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        560,
        624
      ],
      "id": "90645130-4bbe-4fe9-8b25-6b2b0a4623dd",
      "name": "Upload your file here",
      "webhookId": "82848bc4-5ea2-4e5a-8bb6-3c09b94a8c5d"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        768,
        960
      ],
      "id": "61765d3c-cded-448d-8ad1-af716d7ffbe1",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        832,
        816
      ],
      "id": "e61d0ad5-447b-45e3-a615-a0ba47ba87fe",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "mode": "insert",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        784,
        624
      ],
      "id": "a959b517-b6eb-44d1-8334-c67e77fedf90",
      "name": "Insert Data to Store",
      "notesInFlow": false
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledge_base",
        "toolDescription": "Use this knowledge base to answer questions from the user",
        "memoryKey": {
          "__rl": true,
          "mode": "list",
          "value": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        1200,
        912
      ],
      "id": "1af71492-37cd-45bc-9d71-931df9a8c7a1",
      "name": "Query Data Tool"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1104,
        1088
      ],
      "id": "4b71b69e-9f4b-4008-8138-d8a752f5e296",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.output }}",
        "voice": "echo",
        "options": {
          "response_format": "mp3"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1568,
        288
      ],
      "id": "26bfc7d2-0a66-45a8-a753-4e558902e8bc",
      "name": "Generate audio",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-29T12:35:41.936Z",
      "updatedAt": "2025-09-29T12:35:41.936Z",
      "role": "workflow:owner",
      "workflowId": "h4QnCCY17P2CHxlX",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-09T15:58:06.000Z",
  "versionId": "daaa8aad-62a1-46dc-b60d-85c39b0be23e"
}