{
  "active": false,
  "connections": {
    "Upload your file here": {
      "main": [
        [
          {
            "node": "Insert Data to Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert Data to Store",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Query Data Tool",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert Data to Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Query Data Tool": {
      "ai_tool": [
        [
          {
            "node": "AI Writer",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "AI Writer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Writer": {
      "main": [
        [
          {
            "node": "Split Out Video Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Writer",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Generate a video": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Video Prompts": {
      "main": [
        [
          {
            "node": "Generate a video",
            "type": "main",
            "index": 0
          },
          {
            "node": "Setup Veo3 Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Download a video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Writer",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Writer",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Setup Veo3 Config": {
      "main": [
        [
          {
            "node": "Build Request Body",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Request Body": {
      "main": [
        [
          {
            "node": "Veo 3 - Generate Video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-30T16:29:24.169Z",
  "id": "sTM97CL0MPo3HtAZ",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Videos Pictoricos",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Upload your data to test RAG",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Upload your file(s)",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -784,
        768
      ],
      "id": "7c52b859-caa3-494f-bdeb-e2162026f2c7",
      "name": "Upload your file here",
      "webhookId": "82848bc4-5ea2-4e5a-8bb6-3c09b94a8c5d"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -336,
        992
      ],
      "id": "eba3eb95-9a4b-463c-b048-27a14a960af4",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        -208,
        992
      ],
      "id": "78547d20-cff5-4f5b-a14e-42c963cf8904",
      "name": "Default Data Loader"
    },
    {
      "parameters": {
        "mode": "insert",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        -352,
        768
      ],
      "id": "5c1538df-3873-4064-aa0c-63669f7c8cd2",
      "name": "Insert Data to Store",
      "notesInFlow": false
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledge_base",
        "toolDescription": "Use this knowledge base to answer questions from the user",
        "memoryKey": {
          "__rl": true,
          "mode": "list",
          "value": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        -320,
        432
      ],
      "id": "5b5e69ac-6b78-4593-b089-853fa26ba70e",
      "name": "Query Data Tool"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -672,
        208
      ],
      "id": "dd548d37-cfe2-42df-b5ea-4bfa71d51264",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "GENERADOR DE CORTO CINEMATOGRÁFICO ESTILO CÓMIC/PICTOGRÁFICO\nOBJETIVO\nAnalizar el contenido del PDF proporcionado y crear un corto visual narrativo de mínimo 20 escenas con estilo cómic/pictográfico, diseñado para ser producido con herramientas de generación de imágenes y video.\n\nCONFIGURACIÓN GENERAL DEL CORTO\nEstilo Visual\n\nEstética: Cómic/pictográfico con fuerte identidad gráfica\nPaleta de colores: Definir paleta dominante según el tono del libro (ej. noir, vibrante, pastel, monocromático)\nTratamiento gráfico: Especificar si usa líneas gruesas, tramados, efectos de tinta, acuarela digital, etc.\nReferencias visuales: Mencionar influencias (ej. estilo manga, cómic europeo, novela gráfica americana, ilustración editorial)\nAtmósfera general: Describir el mood (ej. nostálgico, tenso, onírico, épico)\n\nPúblico Objetivo\nEspecificar a quién va dirigido el corto (edad, contexto).\nDuración Total\nMínimo 20 escenas × 5-8 segundos = 1:40 - 2:40 minutos\n\nESTRUCTURA DE CADA ESCENA\nPara cada escena, proporcionar la siguiente información detallada:\n1. NÚMERO Y TÍTULO DE ESCENA\n\nEj: ESCENA 01: EL DESPERTAR\n\n2. NARRADOR / DIÁLOGO\n\nTexto que se escucha en voz off o diálogo de personajes\nMáximo 8 segundos al ser leído en voz alta\nEstilo: descriptivo, poético, dramático o neutro según el tono del libro\n\n3. DESCRIPCIÓN VISUAL\n\nQué se muestra en pantalla\nElementos clave de la composición\nPersonajes presentes y su posición\nObjetos relevantes\nAmbiente/locación\n\n4. ESCALA DEL PLANO\nEspecificar uno de los siguientes:\n\nGran Plano General (GPG): Paisaje amplio, personaje muy pequeño en el entorno\nPlano General (PG): Personaje completo con entorno visible\nPlano Entero (PE): Personaje de cuerpo completo\nPlano Americano (PA): Desde las rodillas hacia arriba\nPlano Medio (PM): Desde la cintura hacia arriba\nPrimer Plano (PP): Rostro y hombros\nPrimerísimo Primer Plano (PPP): Parte del rostro (ojos, boca)\nPlano Detalle (PD): Objeto específico o parte del cuerpo (manos, etc.)\n\n5. ÁNGULO DE CÁMARA\nEspecificar uno de los siguientes:\n\nNormal / Altura de ojos: Cámara a la altura del personaje\nPicado: Cámara desde arriba mirando hacia abajo (vulnerable, pequeñez)\nContrapicado: Cámara desde abajo mirando hacia arriba (poder, grandeza)\nCenital: Directamente desde arriba (vista de pájaro)\nNadir: Directamente desde abajo\nAberrante / Holandés: Cámara inclinada (desequilibrio, tensión)\n\n6. RECURSO CINEMATOGRÁFICO\nEspecificar técnica narrativa visual:\n\nMontaje paralelo: Alternar entre dos acciones simultáneas\nFlashback: Salto al pasado\nFlash-forward: Salto al futuro\nRalentización (slow motion): Enfatizar momento dramático\nAceleración (time-lapse): Condensar tiempo\nTransición por fundido: Fade in/out para cambio temporal o emocional\nTransición por corte seco: Cambio abrupto para impacto\nTransición por barrido: Wipe, cortinilla\nSplit screen: Pantalla dividida\nFuera de foco → Enfoque: Desvelar información gradualmente\nZoom in/out: Acercar o alejar para revelar contexto\nTravelling lateral/circular: Movimiento de cámara alrededor del sujeto\nProfundidad de campo: Enfoque selectivo (bokeh)\nSiluetas: Personajes en sombra\nReflejos: Uso de espejos, agua, cristales\nViñeta narrativa: Caja de cómic clásica con márgenes negros\n\n7. LENGUAJE NARRATIVO\nFunción narrativa de la escena:\n\nPresentación: Introducir personaje, lugar o situación\nConflicto: Plantear problema o tensión\nDesarrollo: Avanzar la trama\nClímax: Punto máximo de tensión\nResolución: Desenlace o cierre\nTransición: Conectar dos momentos/lugares\nSimbolismo: Metáfora visual\nContraste: Yuxtaponer opuestos (antes/después, interior/exterior)\n\n8. LENGUAJE GESTUAL\nExpresión corporal y emocional:\n\nExpresión facial: Alegría, tristeza, miedo, ira, sorpresa, determinación, confusión, etc.\nPostura corporal: Erguida (confianza), encorvada (derrota), tensa, relajada\nGestos de manos: Abiertos (honestidad), cerrados (tensión), señalando, ocultando\nMirada: Directa, esquiva, perdida, fija, hacia arriba/abajo\nMovimiento: Estático, caminando, corriendo, cayendo, levantándose\nRelación con otros: Proximidad, distancia, contacto físico, aislamiento\n\n9. ELEMENTOS GRÁFICOS ESTILO CÓMIC\n\nOnomatopeyas: BOOM, CRASH, SPLASH (si aplica)\nLíneas de movimiento: Speed lines, motion blur\nBocadillos de texto: Pensamiento, diálogo, narración\nEfectos visuales: Estrellas (impacto), gotas (sudor), rayos (sorpresa)\nTransiciones entre viñetas: Encadenadas, superpuestas, con márgenes",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -416,
        208
      ],
      "id": "27c69819-9ef4-4e69-bb31-e66d73461d5a",
      "name": "AI Writer"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"configuracion_general\": {\n    \"estilo_visual\": \"[Descripción completa del estilo gráfico - ej: cómic noir con influencias de novela gráfica europea]\",\n    \"paleta_colores\": \"[Colores dominantes y su significado - ej: tonos azules fríos para escenas corporativas, naranjas cálidos para momentos de tensión]\",\n    \"tratamiento_grafico\": \"[Técnicas de ilustración - ej: líneas gruesas de tinta, tramados digitales, acuarela digital]\",\n    \"atmosfera\": \"[Mood general - ej: tenso, nostálgico, épico]\",\n    \"duracion_estimada\": \"[X escenas × Y segundos = Z minutos]\"\n  },\n  \"escenas\": [\n    {\n      \"escena_num\": 1,\n      \"titulo\": \"[TÍTULO DE LA ESCENA]\",\n      \"narrador\": \"[Texto hablado - máximo 8 segundos al ser leído en voz alta]\",\n      \"descripcion_visual\": \"[Qué se ve en pantalla - descripción detallada de elementos, personajes, objetos, ambiente]\",\n      \"escala_plano\": \"[GPG/PG/PE/PA/PM/PP/PPP/PD - con explicación breve]\",\n      \"angulo_camara\": \"[Normal/Picado/Contrapicado/Cenital/Nadir/Aberrante - con explicación del efecto buscado]\",\n      \"recurso_cinematografico\": \"[Técnica visual utilizada - ej: flashback, slow motion, transición por fundido, etc.]\",\n      \"lenguaje_narrativo\": \"[Función en la historia - ej: Presentación, Conflicto, Desarrollo, Clímax, Resolución]\",\n      \"lenguaje_gestual\": \"[Expresiones faciales, postura corporal, gestos, mirada, movimiento]\",\n      \"elementos_graficos\": \"[Onomatopeyas, líneas de movimiento, bocadillos, efectos visuales estilo cómic]\"\n    },\n    {\n      \"escena_num\": 2,\n      \"titulo\": \"[TÍTULO DE LA ESCENA]\",\n      \"narrador\": \"[Texto hablado]\",\n      \"descripcion_visual\": \"[Descripción visual detallada]\",\n      \"escala_plano\": \"[Tipo de plano]\",\n      \"angulo_camara\": \"[Ángulo específico]\",\n      \"recurso_cinematografico\": \"[Técnica visual]\",\n      \"lenguaje_narrativo\": \"[Función narrativa]\",\n      \"lenguaje_gestual\": \"[Expresiones y movimientos]\",\n      \"elementos_graficos\": \"[Efectos gráficos]\"\n    }\n  ]\n}",
        "autoFix": true,
        "customizeRetryPrompt": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -32,
        432
      ],
      "id": "ae5f06f6-6683-4caa-9cf3-2f426c82d737",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "resource": "video",
        "modelId": {
          "__rl": true,
          "value": "models/veo-3.0-fast-generate-preview",
          "mode": "list",
          "cachedResultName": "models/veo-3.0-fast-generate-preview"
        },
        "prompt": "=You are a cinematic comic-style video generator.\nGenerate a short video clip for a single scene based on the structured content below:\n\nScene number: {{ $json.escena_num }} of {{ $('AI Writer').item.json.output.escenas.length }}\nTitle: {{ $json.titulo }}\nNarration: {{ $json.narrador }}\nVisual description: {{ $json.descripcion_visual }}\nShot scale: {{ $json.escala_plano }}\nCamera angle: {{ $json.angulo_camara }}\nCinematic technique: {{ $json.recurso_cinematografico }}\nNarrative function: {{ $json.lenguaje_narrativo }}\nBody language: {{ $json.lenguaje_gestual }}\nGraphic elements: {{ $json.elementos_graficos }}\n\n# STYLE\n- Visual aesthetic: {{ $('AI Writer').item.json.output.configuracion_general.estilo_visual }}\n- Color palette: {{ $('AI Writer').item.json.output.configuracion_general.paleta_colores }}\n- Graphic treatment: {{ $('AI Writer').item.json.output.configuracion_general.tratamiento_grafico }}\n- Overall atmosphere: {{ $('AI Writer').item.json.output.configuracion_general.atmosfera }}\n- Tone: Cinematic comic book style, pictographic, dramatic, immersive\n- Duration: 6 to 8 seconds\n\n# VISUAL GUIDELINES\n- Apply the specified shot scale (GPG/PG/PE/PA/PM/PP/PPP/PD) accurately\n- Use the designated camera angle to create the intended emotional effect\n- Implement the cinematic technique described (flashback, slow motion, depth of field, etc.)\n- Incorporate comic-style graphic elements: motion lines, onomatopoeia, comic panel borders\n- Match body language and gestures to the emotional content\n- Maintain visual coherence with the established color palette and graphic style\n- Use dynamic camera movements and lighting to enhance drama\n- Sync visuals precisely with the narration timing\n\n# COMPOSITION\n- Follow the visual description exactly as specified\n- Position characters and objects as described\n- Create the environment/location detailed in the scene\n- Apply the narrative function (presentation, conflict, development, climax, resolution)\n\n# OUTPUT\nGenerate a single video clip (6-8 seconds) for this scene only.\nThe video must feel like part of a larger cinematic comic-book narrative.\nDo not add captions, text overlays, or subtitles to the video (graphic elements are part of the visual style, not overlays).\nEnsure the scene works as a standalone moment while maintaining continuity with the overall aesthetic.",
        "returnAs": "url",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        288,
        208
      ],
      "id": "55eda480-0e60-4f8b-93c1-e33c9849b656",
      "name": "Generate a video",
      "credentials": {
        "googlePalmApi": {
          "id": "2cVRmfMQjICAe8Ii",
          "name": "Google Gemini Api account PARENTES"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "download",
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        736,
        208
      ],
      "id": "93afc116-c793-4960-8f5a-758c1d62e897",
      "name": "Download a video",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.escenas",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        64,
        208
      ],
      "id": "05ceabe7-0173-4ccf-9465-82d0a5706114",
      "name": "Split Out Video Prompts"
    },
    {
      "parameters": {
        "fieldToSplitOut": "url",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        512,
        208
      ],
      "id": "a289cda3-127e-4045-9e8c-dd2ba4aa2e97",
      "name": "Split Out"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $workflow.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -448,
        432
      ],
      "id": "cbf6ba9c-aa7a-4445-a3be-db44a6d6dcf3",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -240,
        640
      ],
      "id": "823b4df8-a22e-4095-abd4-4845a923a140",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "location",
              "name": "location",
              "value": "us-central1",
              "type": "string"
            },
            {
              "id": "projectId",
              "name": "projectId",
              "value": "1",
              "type": "string"
            },
            {
              "id": "modelId",
              "name": "modelId",
              "value": "veo-3-generate",
              "type": "string"
            },
            {
              "id": "accessToken",
              "name": "accessToken",
              "value": "AIzaSyAcYXvtzmOwO1FAXZZiKXDu5jwr0telckE",
              "type": "string"
            },
            {
              "id": "prompt",
              "name": "prompt",
              "value": "Un gato jugando con una pelota en cámara lenta",
              "type": "string"
            },
            {
              "id": "aspectRatio",
              "name": "aspectRatio",
              "value": "16:9",
              "type": "string"
            },
            {
              "id": "durationSeconds",
              "name": "durationSeconds",
              "value": 5,
              "type": "number"
            },
            {
              "id": "resolution",
              "name": "resolution",
              "value": "1080p",
              "type": "string"
            },
            {
              "id": "enhancePrompt",
              "name": "enhancePrompt",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "generateAudio",
              "name": "generateAudio",
              "value": false,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "name": "Setup Veo3 Config",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        432,
        496
      ],
      "id": "ad6003c2-2fb1-44ec-b5af-8f9a22c38c45"
    },
    {
      "parameters": {
        "jsCode": "const input = $input.item.json;\n\nconst instance = {\n  prompt: input.prompt\n};\n\n// Handle image input\nif (input.imageBase64) {\n  instance.image = {\n    bytesBase64Encoded: input.imageBase64,\n    mimeType: input.imageMimeType || 'image/jpeg'\n  };\n} else if (input.imageGcsUri) {\n  instance.image = {\n    gcsUri: input.imageGcsUri,\n    mimeType: input.imageMimeType || 'image/jpeg'\n  };\n}\n\n// Handle lastFrame input\nif (input.lastFrameBase64) {\n  instance.lastFrame = {\n    bytesBase64Encoded: input.lastFrameBase64,\n    mimeType: input.lastFrameMimeType || 'image/jpeg'\n  };\n} else if (input.lastFrameGcsUri) {\n  instance.lastFrame = {\n    gcsUri: input.lastFrameGcsUri,\n    mimeType: input.lastFrameMimeType || 'image/jpeg'\n  };\n}\n\n// Handle video input\nif (input.videoBase64) {\n  instance.video = {\n    bytesBase64Encoded: input.videoBase64,\n    mimeType: input.videoMimeType || 'video/mp4'\n  };\n} else if (input.videoGcsUri) {\n  instance.video = {\n    gcsUri: input.videoGcsUri,\n    mimeType: input.videoMimeType || 'video/mp4'\n  };\n}\n\n// Handle reference images\nif (input.referenceImages) {\n  instance.referenceImages = input.referenceImages;\n}\n\n// Build parameters object\nconst params = {};\nif (input.aspectRatio) params.aspectRatio = input.aspectRatio;\nif (input.compressionQuality) params.compressionQuality = input.compressionQuality;\nif (input.durationSeconds) params.durationSeconds = input.durationSeconds;\nif (input.enhancePrompt !== undefined) params.enhancePrompt = input.enhancePrompt;\nif (input.generateAudio !== undefined) params.generateAudio = input.generateAudio;\nif (input.negativePrompt) params.negativePrompt = input.negativePrompt;\nif (input.personGeneration) params.personGeneration = input.personGeneration;\nif (input.resolution) params.resolution = input.resolution;\nif (input.sampleCount) params.sampleCount = input.sampleCount;\nif (input.seed) params.seed = input.seed;\nif (input.storageUri) params.storageUri = input.storageUri;\n\n// Build final payload\nconst payload = {\n  instances: [instance],\n  parameters: params\n};\n\nreturn {\n  json: {\n    ...input,\n    requestBody: payload\n  }\n};"
      },
      "name": "Build Request Body",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        496
      ],
      "id": "5565fa9d-4d6c-4d03-8c1c-69ceee4ab0a3"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://{{ $json.location }}-aiplatform.googleapis.com/v1/projects/{{ $json.projectId }}/locations/{{ $json.location }}/publishers/google/models/{{ $json.modelId }}:predictLongRunning",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {}
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.requestBody }}",
        "options": {}
      },
      "name": "Veo 3 - Generate Video",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        832,
        496
      ],
      "id": "9bcfac87-9764-4865-9a74-88ebd26275f7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "P3CkcQfBL77gpXLN",
          "name": "Header Auth account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-30T16:29:24.175Z",
      "updatedAt": "2025-09-30T16:29:24.175Z",
      "role": "workflow:owner",
      "workflowId": "sTM97CL0MPo3HtAZ",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-01T07:47:46.000Z",
  "versionId": "abf8f38c-4fd2-412f-8cd7-23ea10ffb898"
}