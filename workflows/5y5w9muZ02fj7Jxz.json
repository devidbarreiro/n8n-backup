{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Routing Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Orquestador",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Orquestador": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agents Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Runner Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Swimmer Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Cyclist Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Triathlon Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Nutritionist Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Orquestador",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Runner Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Swimmer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Cyclist Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Triathlon Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Nutritionist Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Agents Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Orquestador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Runner Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Swimmer Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Cyclist Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Triathlon Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Nutritionist Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-25T10:56:04.291Z",
  "id": "5y5w9muZ02fj7Jxz",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "My workflow test",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -432,
        -64
      ],
      "id": "20fc50e9-3259-447f-9ecd-0b9aea3c37c9",
      "name": "When chat message received",
      "webhookId": "f634dda0-34d5-47c1-9ef5-a5e7cede59ec"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ed1a441-a675-486e-94e5-76efb817ee58",
              "name": "user_id",
              "value": "1",
              "type": "string"
            },
            {
              "id": "d4f7e67f-be49-4fab-940b-e04b3f4f8b22",
              "name": "content",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -144,
        -64
      ],
      "id": "26851825-073d-415f-a8b5-a32447dc258a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"agente_seleccionado\": \"runner\",\n  \"razonamiento\": \"Detecte la palabra maraton en la consulta\",\n  \"urgencia\": \"media\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        384,
        400
      ],
      "id": "fcfbeb22-375c-467f-8f72-911f677d9f26",
      "name": "Routing Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Analiza esta consulta del usuario y decide que agente deportivo debe responder.\n\nConsulta: \"{{ $json.content }}\"\n\nAgentes disponibles:\n- runner: Para running, carreras, maratones, 5K, 10K, correr\n- swimmer: Para natacion, piscina, estilos, nadar\n- cyclist: Para ciclismo, bici, potencia, FTP\n- triathlon: Para triatlon, ironman, brick\n- nutritionist: Para nutricion, dieta, alimentacion\n\nReglas de decision:\n- Si menciona \"maraton\", \"correr\", \"5K\", \"10K\" → runner\n- Si menciona \"nadar\", \"piscina\", \"crol\" → swimmer\n- Si menciona \"bici\", \"ciclismo\", \"FTP\" → cyclist\n- Si menciona \"triatlon\", \"ironman\" → triathlon\n- Si menciona \"nutricion\", \"dieta\", \"comer\" → nutritionist\n\nResponde SOLO en formato JSON valido."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        208,
        96
      ],
      "id": "bdd69bfd-52e9-4e0d-a3bf-c9b40e98b313",
      "name": "Orquestador"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"id\": 1,\n  \"usuario_id\": 42,\n  \"agente_creador_id\": 3,\n  \"nombre\": \"Plan de fuerza inicial\",\n  \"descripcion\": \"Rutina de entrenamiento enfocada en fuerza y resistencia.\",\n  \"fecha_inicio\": \"2025-10-01\",\n  \"fecha_fin\": \"2025-12-31\",\n  \"activo\": true,\n  \"fecha_creacion\": \"2025-09-25T14:30:00Z\",\n  \"created_at\": \"2025-09-25T14:30:00Z\",\n  \"updated_at\": \"2025-09-25T14:30:00Z\"\n}\n",
        "autoFix": true,
        "customizeRetryPrompt": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        912,
        624
      ],
      "id": "ec89f338-ce7c-4864-ade7-184a78475fef",
      "name": "Agents Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un entrenador experto en RUNNING. Analiza esta consulta y crea un plan personalizado.\n\nConsulta: \"{{ $node['Edit Fields'].json.content }}\"\n\nTu expertise:\n- Planes para 5K, 10K, medio maraton, maraton\n- Periodizacion progresiva\n- Prevencion de lesiones\n- Tecnica de carrera\n\nTipos de entrenamiento (solo estos 3):\n- base: aerobico suave (Z1-Z2)\n- series: intervalos velocidad (Z4-Z5)  \n- long: entrenamientos largos\n\nEstructura tipica:\n- 3-4 entrenamientos/semana\n- Progresion gradual de volumen\n- Balance 60% base, 25% series, 15% long\n\nCrea un plan detallado y responde en formato JSON.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        688,
        48
      ],
      "id": "229e266c-40b1-48d9-87dc-eb4507ec50f5",
      "name": "Runner Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un entrenador experto en NATACION. Analiza esta consulta y crea un plan personalizado.\n\nConsulta: \"{{ $node['Edit Fields'].json.content }}\"\n\nTu expertise:\n- Tecnica de 4 estilos (libre, espalda, pecho, mariposa)\n- Entrenamientos en piscina estructurados\n- Analisis de ritmos por 100m\n- Respiracion bilateral\n\nTipos de entrenamiento (solo estos 3):\n- base: nado continuo aerobico\n- series: intervalos velocidad y tecnica\n- long: entrenamientos largos resistencia\n\nEstructura tipica:\n- 3-4 sesiones/semana\n- Combinar tecnica con resistencia\n- Progresion de volumen gradual\n\nCrea un plan detallado y responde en formato JSON.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        688,
        160
      ],
      "id": "ef7bfd47-8b2a-4c54-b595-5739e6fb822b",
      "name": "Swimmer Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un entrenador experto en CICLISMO. Analiza esta consulta y crea un plan personalizado.\n\nConsulta: \"{{ $node['Edit Fields'].json.content }}\"\n\nTu expertise:\n- Entrenamientos basados en FTP\n- Analisis de potencia y cadencia\n- Tecnica de pedaleo\n- Planificacion ruta/montana\n\nTipos de entrenamiento (solo estos 3):\n- base: rodajes aerobicos suaves\n- series: intervalos de potencia\n- long: entrenamientos largos\n\nEstructura tipica:\n- 3-5 sesiones/semana\n- Balance volumen/intensidad\n- Periodizacion de potencia\n\nCrea un plan detallado y responde en formato JSON.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        688,
        256
      ],
      "id": "43374751-2fc6-40ad-88e3-fb178f5aba57",
      "name": "Cyclist Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un entrenador experto en TRIATLON. Analiza esta consulta y crea un plan personalizado.\n\nConsulta: \"{{ $node['Edit Fields'].json.content }}\"\n\nTu expertise:\n- Integracion natacion-ciclismo-carrera\n- Entrenamientos BRICK (bici+carrera)\n- Transiciones T1 y T2\n- Periodizacion multi-disciplinar\n\nTipos de entrenamiento:\n- base: aerobico suave por disciplina\n- series: intervalos velocidad/potencia\n- long: entrenamientos largos\n- brick: combinados (especial triatlon)\n\nEstructura tipica:\n- 6-8 sesiones/semana\n- Balance entre 3 disciplinas\n- Enfoque en transiciones\n\nCrea un plan detallado y responde en formato JSON.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        688,
        352
      ],
      "id": "46d9b58c-f70f-4de3-8048-fc3a321522f4",
      "name": "Triathlon Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Eres un NUTRICIONISTA DEPORTIVO experto. Analiza esta consulta y crea un plan personalizado.\n\nConsulta: \"{{ $node['Edit Fields'].json.content }}\"\n\nTu expertise:\n- Nutricion periodizada por fases\n- Composicion corporal optima\n- Hidratacion y electrolitos\n- Suplementacion evidence-based\n- Estrategias pre/durante/post ejercicio\n\nAreas de enfoque:\n- Analisis nutricional personalizado\n- Planificacion de comidas\n- Estrategias de hidratacion\n- Recomendaciones suplementacion\n- Timing de nutrientes\n\nEstructura tipica:\n- Plan nutricional semanal\n- Estrategias competicion\n- Monitoreo composicion corporal\n\nCrea un plan nutricional detallado y responde en formato JSON.",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        688,
        464
      ],
      "id": "394f42ac-b8bd-48fb-bebb-fbb620ecbd74",
      "name": "Nutritionist Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        448,
        864
      ],
      "id": "42866402-d8e4-434d-8f3c-9507f8c90475",
      "name": "OpenAI Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.agente_seleccionado }}",
                    "rightValue": "runner",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "06bb4578-6c65-414e-a289-d7dc1d6a4ddd"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e38a1b85-bc35-45a9-997f-9530aecf9aca",
                    "leftValue": "={{ $json.output.agente_seleccionado }}",
                    "rightValue": "swimmer",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "50095b47-ee89-4b9b-ba34-1b6b4abc5e40",
                    "leftValue": "={{ $json.output.agente_seleccionado }}",
                    "rightValue": "cyclist",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5d0beadb-fe36-4374-9697-1399ef23c1bb",
                    "leftValue": "={{ $json.output.agente_seleccionado }}",
                    "rightValue": "triathlon",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "643245d3-bd6c-4c77-8de2-4b0b7eead7fe",
                    "leftValue": "={{ $json.output.agente_seleccionado }}",
                    "rightValue": "nutritionist",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        480,
        80
      ],
      "id": "6bc7fe20-c4e6-4b1d-88e1-689eaa3e0da3",
      "name": "Switch"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-25T10:56:04.298Z",
      "updatedAt": "2025-09-25T10:56:04.298Z",
      "role": "workflow:owner",
      "workflowId": "5y5w9muZ02fj7Jxz",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-25T13:43:49.000Z",
  "versionId": "28a253a3-5381-449a-adfa-bf2a0b80b50f"
}