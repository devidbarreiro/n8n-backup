{
  "active": false,
  "connections": {
    "Generate a video": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Video Prompts": {
      "main": [
        [
          {
            "node": "Generate a video",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Download a video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Google Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Google Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Google Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Agent": {
      "main": [
        [
          {
            "node": "Split Out Video Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-26T11:08:05.998Z",
  "id": "Fc3PxqA4LXB5u1rw",
  "isArchived": false,
  "meta": null,
  "name": "Sub GoogleVideo Agent",
  "nodes": [
    {
      "parameters": {
        "resource": "video",
        "modelId": {
          "__rl": true,
          "value": "models/veo-2.0-generate-001",
          "mode": "list",
          "cachedResultName": "models/veo-2.0-generate-001"
        },
        "prompt": "=You are a cinematic video generator.  \nGenerate a short video clip for a single scene from a trailer, based on the structured content below:  \n\nScene number: {{ $json.escena_num }} of {{ $('Google Agent').item.json.output.trailer.total_scenes }} \nNarration: {{ $json[\"narrador\"] }}  \nVisuals: {{ $json[\"escena\"] }}  \n\n# STYLE\n- Tone: cinematic, dramatic, immersive.  \n- Duration: around 6 to 8 seconds.  \n- Show realistic environments, office settings, data visualizations, and emotional tension in the protagonist.  \n- Use dynamic camera movements and lighting to increase drama.  \n- Sync visuals with the narration.  \n- The scene must feel like part of a larger MBA case study trailer.  \n\n# OUTPUT\nGenerate a single video clip (6–8 seconds) for this scene only.  \nDo not add captions, text overlays, or subtitles to the video.",
        "returnAs": "url",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -1408,
        176
      ],
      "id": "dd80a82c-d113-4454-9e3a-d6d5ee08c7d2",
      "name": "Generate a video",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "download",
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -960,
        176
      ],
      "id": "28af78a3-51f7-4c5e-8cf7-0f6f8d0efd00",
      "name": "Download a video",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.trailer.narration_with_scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1632,
        272
      ],
      "id": "36166c59-2ea8-4188-9525-a1e04db48057",
      "name": "Split Out Video Prompts"
    },
    {
      "parameters": {
        "fieldToSplitOut": "url",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -1184,
        176
      ],
      "id": "77a27e2d-f953-4669-b281-a3bb7c2357bf",
      "name": "Split Out"
    },
    {
      "parameters": {
        "resource": "audio",
        "model": "tts-1-hd",
        "input": "={{ $json.narrador }}",
        "voice": "nova",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -1408,
        368
      ],
      "id": "c4445a13-aeb8-4776-8cf1-68794001b20b",
      "name": "Generate audio",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -2208,
        272
      ],
      "id": "35fc8c8b-8740-4bb0-90e8-d8e5c076ee69",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -1984,
        496
      ],
      "id": "aff1faf0-b725-48db-8433-1ae11262dea0",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"trailer\": {\n    \"title\": \"El dilema de RoboTech\",\n    \"total_scenes\": 3,\n    \"narration_with_scenes\": [\n      {\n        \"escena_num\": 1,\n        \"narrador\": \"Singapur, dos de la madrugada. Pat Chen, ingeniera y CEO de RoboTech, revisa cifras que podrían decidir el futuro de su compañía.\",\n        \"escena\": \"Plano de oficina moderna con luz tenue; Pat Chen frente a una pantalla llena de gráficos financieros.\"\n      },\n      {\n        \"escena_num\": 2,\n        \"narrador\": \"En apenas tres años, las ventas crecieron de 22 a 117 millones de dólares. Los márgenes se dispararon hasta el 53%. Todo parece éxito absoluto.\",\n        \"escena\": \"Gráficos animados de crecimiento exponencial, superpuestos con titulares de prensa sobre el auge de RoboTech.\"\n      },\n      {\n        \"escena_num\": 3,\n        \"narrador\": \"Pero detrás del brillo, surge la amenaza: gigantes como Medtronic y Johnson & Johnson entran en la cirugía robótica. ¿Deberá RoboTech arriesgarlo todo una vez más?\",\n        \"escena\": \"Transición a imágenes de quirófanos robóticos avanzados, seguidas por un primer plano del rostro de Pat Chen en tensión.\"\n      }\n    ]\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -1840,
        496
      ],
      "id": "c1719914-48c8-4677-ba1b-d896e9b0efc8",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.query }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "# TASK 1: TRAILER CINEMATOGRÁFICO (DIVIDIDO EN ESCENAS DE 8s, mínimo 7 escenas de 8 segundos cada una)\n1. Analiza cuidadosamente el contenido del PDF proporcionado.\n2. Escribe únicamente el **texto narrado del TRAILER** para el **MÓDULO 01**, incluyendo **indicaciones de escenas**.\n\n# DIRECTRICES DE REDACCIÓN\n- Público objetivo: estudiantes de MBA.\n- Duración total: mínimo 1 minuto y máximo 90 segundos al ser leído en voz alta.\n- Estilo narrativo, cinematográfico e inmersivo, como un tráiler.\n- Divide el guion en una lista de escenas secuenciales, cada una de aprox. 6–8 segundos.\n- Cada escena debe tener dos campos:\n   - **NARRADOR**: lo que dice la voz en off.\n   - **ESCENA**: lo que se muestra visualmente (ej. “Plano de oficina de madrugada”, “Gráfico animado de crecimiento de ventas”, “Primer plano del protagonista preocupado”).\n- Inicio: situar al protagonista (nombre, edad, cargo) en un momento de tensión.\n- Incluir 2–3 datos duros y espectaculares (ventas, márgenes, cifras clave).\n- Crear contraste entre éxito aparente y conflicto estratégico oculto.\n- Cierre: plantear el dilema en forma de pregunta que deja intriga para los estudiantes.\n- Tono: dramático, frases cortas, ritmo de suspenso.\n- **NO** resumas todo el caso ni expliques soluciones; solo genera tensión.\n- **NO** incluyas notas técnicas.\n- Devuelve únicamente el guion dividido en escenas numeradas.\n- Recuerda que la voz en off del narrador tiene que ocupar prácticamente el total de la escena, así que asegúrate que son lo suficientemente extensos pero sin pasarse (máximo 8 segundos por cada narración de cada escena).\n\n# OUTPUT\nUn guion estructurado como lista de escenas:\n- Escena 1: { \"narrador\": \"...\", \"escena\": \"...\" }\n- Escena 2: { \"narrador\": \"...\", \"escena\": \"...\" }\n- Escena 3: { \"narrador\": \"...\", \"escena\": \"...\" }\n... hasta cubrir el tiempo total."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1984,
        272
      ],
      "id": "969f2384-4d0a-40ac-b361-e59fd6cb1d13",
      "name": "Google Agent"
    },
    {
      "parameters": {
        "url": "https://api.rendi.dev/ffmpeg",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-API-Key",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"input_files\": {\n    \"in_1\": \"{{ $json.video_url_1 }}\",\n    \"in_2\": \"{{ $json.video_url_2 }}\",\n    \"in_3\": \"{{ $json.video_url_3 }}\"\n  },\n  \"output_files\": {\n    \"out_1\": \"video_concatenado.mp4\"\n  },\n  \"ffmpeg_command\": \"-i {{in_1}} -i {{in_2}} -i {{in_3}} -filter_complex '[0:v][0:a][1:v][1:a][2:v][2:a]concat=n=3:v=1:a=1[outv][outa]' -map '[outv]' -map '[outa]' {{out_1}}\"\n}",
        "options": {}
      },
      "name": "FFmpeg - Concatenar Videos",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1056,
        544
      ],
      "id": "8d25427d-9b8d-41a4-ad1c-a0123cd00315",
      "credentials": {
        "httpHeaderAuth": {
          "id": "P3CkcQfBL77gpXLN",
          "name": "Header Auth account"
        }
      }
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "query": "haz el video de un caso de macdonalds"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-26T11:08:06.005Z",
      "updatedAt": "2025-09-26T11:08:06.005Z",
      "role": "workflow:owner",
      "workflowId": "Fc3PxqA4LXB5u1rw",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-29T09:59:15.000Z",
  "versionId": "2862fd85-6296-47b0-a827-087cb5083c12"
}