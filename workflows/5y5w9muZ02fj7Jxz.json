{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Routing Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Orquestador",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Orquestador": {
      "main": [
        [
          {
            "node": "IF Runner",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Swimmer",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Cyclist",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Triathlon",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF Nutritionist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Runner": {
      "main": [
        [
          {
            "node": "Runner Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Swimmer": {
      "main": [
        [
          {
            "node": "Swimmer Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Cyclist": {
      "main": [
        [
          {
            "node": "Cyclist Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Triathlon": {
      "main": [
        [
          {
            "node": "Triathlon Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Nutritionist": {
      "main": [
        [
          {
            "node": "Nutritionist Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agents Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Runner Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Swimmer Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Cyclist Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Triathlon Agent",
            "type": "ai_outputParser",
            "index": 0
          },
          {
            "node": "Nutritionist Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Runner Agent": {
      "main": [
        [
          {
            "node": "Create Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Swimmer Agent": {
      "main": [
        [
          {
            "node": "Create Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cyclist Agent": {
      "main": [
        [
          {
            "node": "Create Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Triathlon Agent": {
      "main": [
        [
          {
            "node": "Create Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Nutritionist Agent": {
      "main": [
        [
          {
            "node": "Create Plan",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Plan": {
      "main": [
        [
          {
            "node": "Save Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Model": {
      "ai_languageModel": [
        [
          {
            "node": "Orquestador",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Runner Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Swimmer Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Cyclist Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Triathlon Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Nutritionist Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Orquestador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-25T10:56:04.291Z",
  "id": "5y5w9muZ02fj7Jxz",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Sistema Deportivo - Workflow Completo con Todos los Agentes",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -1072,
        -512
      ],
      "id": "37970ac0-5904-42eb-9bec-486532dcb281",
      "name": "When chat message received",
      "webhookId": "f634dda0-34d5-47c1-9ef5-a5e7cede59ec"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ed1a441-a675-486e-94e5-76efb817ee58",
              "name": "user_id",
              "value": "1",
              "type": "string"
            },
            {
              "id": "d4f7e67f-be49-4fab-940b-e04b3f4f8b22",
              "name": "content",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -784,
        -512
      ],
      "id": "1b3d729a-6057-4b01-a65c-29f979216d65",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"agente_seleccionado\": \"runner | swimmer | cyclist | triathlon | nutritionist\",\n  \"razonamiento\": \"Por que seleccione este agente\",\n  \"urgencia\": \"alta | media | baja\"\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -256,
        -48
      ],
      "id": "278c2ef8-69d4-4618-8030-1e3860dfe4ac",
      "name": "Routing Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres el ORQUESTADOR. Analiza esta consulta y decide que agente debe responder:\n\nAgentes disponibles:\n- runner: Para running, maratones, 5K, 10K, correr, medio maraton, maraton\n- swimmer: Para natacion, piscina, estilos, crol, nadar\n- cyclist: Para ciclismo, bici, potencia, FTP, cadencia\n- triathlon: Para triatlon, ironman, brick, combinacion deportes\n- nutritionist: Para nutricion, dieta, peso, alimentacion, suplementos\n\nAnaliza las palabras clave:\n- Si menciona maraton, medio maraton, 5K, 10K, correr → runner\n- Si menciona nadar, piscina, crol, espalda, natacion → swimmer\n- Si menciona bici, ciclismo, FTP, potencia, cadencia → cyclist\n- Si menciona triatlon, ironman, brick, combinacion → triathlon\n- Si menciona nutricion, dieta, peso, comer, alimentacion → nutritionist"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -432,
        -352
      ],
      "id": "694b30c1-4ae8-495a-bb23-2c3e8a88d1dc",
      "name": "Orquestador"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.output.agente_seleccionado }}",
              "value2": "runner"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -144,
        -400
      ],
      "id": "00ae36b5-5442-4479-a798-587034454395",
      "name": "IF Runner"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.output.agente_seleccionado }}",
              "value2": "swimmer"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -144,
        -288
      ],
      "id": "cb0a87cb-e298-4c33-a7f2-2dbbc5b14a74",
      "name": "IF Swimmer"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.output.agente_seleccionado }}",
              "value2": "cyclist"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -144,
        -192
      ],
      "id": "52a98d19-5aef-47ee-abd0-160be2b88bbb",
      "name": "IF Cyclist"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.output.agente_seleccionado }}",
              "value2": "triathlon"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -144,
        -96
      ],
      "id": "d74639d0-a189-4157-8c6a-d5798193612e",
      "name": "IF Triathlon"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.output.agente_seleccionado }}",
              "value2": "nutritionist"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -144,
        16
      ],
      "id": "8320cb4f-dc33-4d87-9ff9-3fba4cdbe699",
      "name": "IF Nutritionist"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"respuesta_principal\": \"Plan detallado de entrenamiento\",\n  \"tipo_respuesta\": \"plan_entrenamiento\",\n  \"deporte\": \"correr\",\n  \"plan_semanal\": {\n    \"duracion_total_semanas\": 21,\n    \"frecuencia_semanal\": 4\n  },\n  \"consejos_adicionales\": [\"Lista de consejos\"]\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        320,
        176
      ],
      "id": "57543d50-cdce-4d70-8fed-7c6bd42531d2",
      "name": "Agents Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un ENTRENADOR DE RUNNING especializado con 15 anos de experiencia.\n\nAnaliza esta consulta: \"{{$node['Edit Fields'].json.content}}\"\n\nTu expertise:\n- Planes progresivos para 5K, 10K, medio maraton, maraton\n- Periodizacion inteligente\n- Prevencion de lesiones\n- Tecnica de carrera\n\nSubtipos obligatorios (solo estos 3):\n- base: entrenamientos aerobicos suaves (Z1-Z2)\n- series: intervalos de velocidad (Z4-Z5)\n- long: entrenamientos largos de resistencia\n\nEstructura semanal tipica:\n- 3-4 entrenamientos/semana\n- Balance: 60% base, 25% series, 15% long\n\nResponde con plan detallado usando formato JSON estructurado."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        48,
        -400
      ],
      "id": "c555460c-7426-4619-aa54-1421bdb8876b",
      "name": "Runner Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un ENTRENADOR DE NATACION especializado con certificaciones internacionales.\n\nAnaliza esta consulta: \"{{$node['Edit Fields'].json.content}}\"\n\nTu expertise:\n- Tecnica de 4 estilos (libre, espalda, pecho, mariposa)\n- Entrenamientos estructurados en piscina\n- Analisis de ritmos por 100m\n- Respiracion bilateral y eficiencia\n\nSubtipos obligatorios (solo estos 3):\n- base: nado continuo aerobico suave\n- series: intervalos de velocidad y tecnica\n- long: entrenamientos largos de resistencia\n\nEstructura tipica:\n- 3-4 sesiones/semana\n- Combinar tecnica con resistencia\n- Progresion gradual de volumen\n\nResponde con plan detallado usando formato JSON estructurado."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        48,
        -288
      ],
      "id": "9cd805f7-2586-4611-a018-1741d7c35018",
      "name": "Swimmer Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un ENTRENADOR DE CICLISMO especializado en rendimiento y potencia.\n\nAnaliza esta consulta: \"{{$node['Edit Fields'].json.content}}\"\n\nTu expertise:\n- Entrenamientos basados en FTP (Functional Threshold Power)\n- Analisis de metricas (potencia, cadencia, FC)\n- Tecnica de pedaleo y aerodinamica\n- Planificacion para ruta y montana\n\nSubtipos obligatorios (solo estos 3):\n- base: rodajes aerobicos suaves (Z1-Z2)\n- series: intervalos de potencia (Z4-Z5)\n- long: entrenamientos largos de resistencia\n\nEstructura tipica:\n- 3-5 sesiones/semana\n- Balance volumen/intensidad\n- Periodizacion de potencia\n\nResponde con plan detallado usando formato JSON estructurado."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        48,
        -192
      ],
      "id": "93bc320c-2b74-4c6c-9ebf-face0aed1315",
      "name": "Cyclist Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Eres un ENTRENADOR DE TRIATLON especializado con experiencia en Ironman.\n\nAnaliza esta consulta: \"{{$node['Edit Fields'].json.content}}\"\n\nTu expertise:\n- Integracion de natacion, ciclismo y carrera\n- Entrenamientos BRICK (bici+carrera)\n- Planificacion de transiciones T1 y T2\n- Periodizacion multi-disciplinar\n- Estrategias de competicion\n\nSubtipos por disciplina (solo estos 3 + brick):\n- base: entrenamientos aerobicos suaves\n- series: intervalos de velocidad/potencia\n- long: entrenamientos largos de resistencia\n- brick: entrenamientos combinados (especial triatlon)\n\nEstructura tipica:\n- 6-8 sesiones/semana distribuidas\n- Balance entre 3 disciplinas\n- Enfoque en transiciones\n\nResponde con plan detallado usando formato JSON estructurado."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        48,
        -96
      ],
      "id": "6a0a85c4-f4d5-4c09-bca0-53b7e18192bf",
      "name": "Triathlon Agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Eres un NUTRICIONISTA DEPORTIVO especializado en deportes de resistencia.\n\nAnaliza esta consulta: \"{{$node['Edit Fields'].json.content}}\"\n\nTu expertise:\n- Nutricion periodizada segun fases de entrenamiento\n- Composicion corporal optima para rendimiento\n- Hidratacion y balance electrolitico\n- Suplementacion basada en evidencia\n- Estrategias pre/durante/post ejercicio\n\nAreas de enfoque:\n- Analisis nutricional personalizado\n- Planificacion de comidas por objetivos\n- Estrategias de hidratacion\n- Recomendaciones de suplementacion\n- Periodizacion nutricional\n\nEstructura tipica:\n- Plan nutricional semanal\n- Timing de nutrientes\n- Estrategias de competicion\n- Monitoreo de composicion corporal\n\nResponde con plan nutricional detallado usando formato JSON estructurado."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        48,
        16
      ],
      "id": "f717986b-5247-4176-8bd7-e47b093f0bc9",
      "name": "Nutritionist Agent"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        304,
        -192
      ],
      "id": "72c03203-1216-41cd-ae3a-2f6667d59317",
      "name": "Create Plan",
      "credentials": {
        "supabaseApi": {
          "id": "hQzQNzIN13lv1Hrz",
          "name": "Supabase account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        448,
        -192
      ],
      "id": "17f78ad0-32c6-4a6a-838a-8e8e3c77840b",
      "name": "Save Conversation",
      "credentials": {
        "supabaseApi": {
          "id": "hQzQNzIN13lv1Hrz",
          "name": "Supabase account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "gpt-4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -544,
        -128
      ],
      "id": "71c74c4d-c152-4136-b1ec-63ab9de37004",
      "name": "OpenAI Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-25T10:56:04.298Z",
      "updatedAt": "2025-09-25T10:56:04.298Z",
      "role": "workflow:owner",
      "workflowId": "5y5w9muZ02fj7Jxz",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-25T11:59:46.000Z",
  "versionId": "2da571d4-c05f-47e7-b2f5-62b36b8fc7bc"
}