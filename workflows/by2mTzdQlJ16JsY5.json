{
  "active": false,
  "connections": {
    "Upload your file here": {
      "main": [
        [
          {
            "node": "Insert Data to Store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Google Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate a video": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download a video": {
      "main": [
        [
          {
            "node": "Extraer Binary Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out Video Prompts": {
      "main": [
        [
          {
            "node": "Generate a video",
            "type": "main",
            "index": 0
          },
          {
            "node": "Generate audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Download a video",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Google Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Agent": {
      "main": [
        [
          {
            "node": "Split Out Video Prompts",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Google Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "HeyGen Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HeyGen Agent": {
      "main": [
        [
          {
            "node": "Setup Heygen",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setup Heygen": {
      "main": [
        [
          {
            "node": "Create Case Intro",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Case Close",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "HeyGen Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Query Data Tool",
            "type": "ai_embedding",
            "index": 0
          },
          {
            "node": "Insert Data to Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Query Data Tool": {
      "ai_tool": [
        [
          {
            "node": "Google Agent",
            "type": "ai_tool",
            "index": 0
          },
          {
            "node": "HeyGen Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert Data to Store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-29T09:05:38.188Z",
  "id": "by2mTzdQlJ16JsY5",
  "isArchived": false,
  "meta": null,
  "name": "Multi Agent Cinemai",
  "nodes": [
    {
      "parameters": {
        "formTitle": "Upload your data to test RAG",
        "formFields": {
          "values": [
            {
              "fieldLabel": "Pdf del caso",
              "fieldType": "file",
              "acceptFileTypes": ".pdf, .csv",
              "requiredField": true
            },
            {
              "fieldLabel": "Guiones",
              "fieldType": "file",
              "acceptFileTypes": ".txt, .md"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.formTrigger",
      "typeVersion": 2.2,
      "position": [
        -208,
        1200
      ],
      "id": "9353150e-3847-4859-84cc-65d9e8b0bed9",
      "name": "Upload your file here",
      "webhookId": "82848bc4-5ea2-4e5a-8bb6-3c09b94a8c5d"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -368,
        176
      ],
      "id": "719b9eab-4c00-4eba-9df4-7751518cc38f",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "resource": "video",
        "modelId": {
          "__rl": true,
          "value": "models/veo-2.0-generate-001",
          "mode": "list",
          "cachedResultName": "models/veo-2.0-generate-001"
        },
        "prompt": "=You are a cinematic video generator.  \nGenerate a short video clip for a single scene from a trailer, based on the structured content below:  \n\nScene number: {{ $json.escena_num }} of {{ $('Google Agent').item.json.output.trailer.total_scenes }} \nNarration: {{ $json[\"narrador\"] }}  \nVisuals: {{ $json[\"escena\"] }}  \n\n# STYLE\n- Tone: cinematic, dramatic, immersive.  \n- Duration: around 6 to 8 seconds.  \n- Show realistic environments, office settings, data visualizations, and emotional tension in the protagonist.  \n- Use dynamic camera movements and lighting to increase drama.  \n- Sync visuals with the narration.  \n- The scene must feel like part of a larger MBA case study trailer.  \n\n# OUTPUT\nGenerate a single video clip (6–8 seconds) for this scene only.  \nDo not add captions, text overlays, or subtitles to the video.",
        "returnAs": "url",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        752,
        184
      ],
      "id": "5086bbdf-9312-4e3e-ae37-79f932af9539",
      "name": "Generate a video",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "video",
        "operation": "download",
        "url": "={{ $json.url }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1200,
        184
      ],
      "id": "c365fb37-3ae8-40cb-9016-71ed172bd1ae",
      "name": "Download a video",
      "credentials": {
        "googlePalmApi": {
          "id": "X30UB2LkpOZovf9c",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "output.trailer.narration_with_scenes",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        528,
        280
      ],
      "id": "0e399d34-61c9-40d9-b202-4449c0182e00",
      "name": "Split Out Video Prompts"
    },
    {
      "parameters": {
        "fieldToSplitOut": "url",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        976,
        184
      ],
      "id": "ef4c6c1e-dbb0-4983-b2df-345a4bf256ff",
      "name": "Split Out"
    },
    {
      "parameters": {
        "resource": "audio",
        "model": "tts-1-hd",
        "input": "={{ $json.narrador }}",
        "voice": "nova",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        752,
        376
      ],
      "id": "dd0b2187-4643-4106-b722-fae402f8636a",
      "name": "Generate audio",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"trailer\": {\n    \"title\": \"El dilema de RoboTech\",\n    \"total_scenes\": 3,\n    \"narration_with_scenes\": [\n      {\n        \"escena_num\": 1,\n        \"narrador\": \"Singapur, dos de la madrugada. Pat Chen, ingeniera y CEO de RoboTech, revisa cifras que podrían decidir el futuro de su compañía.\",\n        \"escena\": \"Plano de oficina moderna con luz tenue; Pat Chen frente a una pantalla llena de gráficos financieros.\"\n      },\n      {\n        \"escena_num\": 2,\n        \"narrador\": \"En apenas tres años, las ventas crecieron de 22 a 117 millones de dólares. Los márgenes se dispararon hasta el 53%. Todo parece éxito absoluto.\",\n        \"escena\": \"Gráficos animados de crecimiento exponencial, superpuestos con titulares de prensa sobre el auge de RoboTech.\"\n      },\n      {\n        \"escena_num\": 3,\n        \"narrador\": \"Pero detrás del brillo, surge la amenaza: gigantes como Medtronic y Johnson & Johnson entran en la cirugía robótica. ¿Deberá RoboTech arriesgarlo todo una vez más?\",\n        \"escena\": \"Transición a imágenes de quirófanos robóticos avanzados, seguidas por un primer plano del rostro de Pat Chen en tensión.\"\n      }\n    ]\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        320,
        400
      ],
      "id": "dcfe37ac-1f76-4ff9-86bd-bddf41270722",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# TASK 1: TRAILER CINEMATOGRÁFICO (DIVIDIDO EN ESCENAS DE 8s, mínimo 7 escenas de 8 segundos cada una)\n1. Analiza cuidadosamente el contenido del PDF proporcionado.\n2. Escribe únicamente el **texto narrado del TRAILER** para el **MÓDULO 01**, incluyendo **indicaciones de escenas**.\n\n# DIRECTRICES DE REDACCIÓN\n- Público objetivo: estudiantes de MBA.\n- Duración total: mínimo 1 minuto y máximo 90 segundos al ser leído en voz alta.\n- Estilo narrativo, cinematográfico e inmersivo, como un tráiler.\n- Divide el guion en una lista de escenas secuenciales, cada una de aprox. 6–8 segundos.\n- Cada escena debe tener dos campos:\n   - **NARRADOR**: lo que dice la voz en off.\n   - **ESCENA**: lo que se muestra visualmente (ej. “Plano de oficina de madrugada”, “Gráfico animado de crecimiento de ventas”, “Primer plano del protagonista preocupado”).\n- Inicio: situar al protagonista (nombre, edad, cargo) en un momento de tensión.\n- Incluir 2–3 datos duros y espectaculares (ventas, márgenes, cifras clave).\n- Crear contraste entre éxito aparente y conflicto estratégico oculto.\n- Cierre: plantear el dilema en forma de pregunta que deja intriga para los estudiantes.\n- Tono: dramático, frases cortas, ritmo de suspenso.\n- **NO** resumas todo el caso ni expliques soluciones; solo genera tensión.\n- **NO** incluyas notas técnicas.\n- Devuelve únicamente el guion dividido en escenas numeradas.\n- Recuerda que la voz en off del narrador tiene que ocupar prácticamente el total de la escena, así que asegúrate que son lo suficientemente extensos pero sin pasarse (máximo 8 segundos por cada narración de cada escena).\n\n# OUTPUT\nUn guion estructurado como lista de escenas:\n- Escena 1: { \"narrador\": \"...\", \"escena\": \"...\" }\n- Escena 2: { \"narrador\": \"...\", \"escena\": \"...\" }\n- Escena 3: { \"narrador\": \"...\", \"escena\": \"...\" }\n... hasta cubrir el tiempo total.\n\nHAZ SOLO 2 ESCENAS, ESTOY HACIENDO PRUEBAS",
        "hasOutputParser": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        128,
        176
      ],
      "id": "a21295b4-ac05-4387-9a5c-89e3d6a15445",
      "name": "Google Agent"
    },
    {
      "parameters": {
        "jsCode": "const items = $input.all();\n\nconst videosData = items.map((item, index) => {\n  if (!item.binary || !item.binary.data) {\n    throw new Error(`Video ${index} no tiene binary data`);\n  }\n  \n  return {\n    json: {\n      videoIndex: index,\n      fileName: `video_${index}.mp4`,\n      mimeType: 'video/mp4'\n    },\n    binary: {\n      data: item.binary.data\n    }\n  };\n});\n\nreturn videosData;"
      },
      "name": "Extraer Binary Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1424,
        184
      ],
      "id": "c39fe62f-6f21-49f6-a142-0190d184af0d"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        64,
        400
      ],
      "id": "03a1ec49-bfd3-4762-84f3-b4b6c9e7d791",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        96,
        848
      ],
      "id": "7c18af62-ddf0-4857-a788-6381b3612c9d",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=# TASK 1: INTRO DEL AVATAR\n1. Analiza cuidadosamente el contenido del PDF proporcionado.\n2. Escribe únicamente el **guion hablado del avatar para la Presentación del Caso** en el **MÓDULO 01: TRAILER**.\n3. Genera además una **descripción breve de la imagen de fondo** que acompañará el video del avatar.\n\n# DIRECTRICES DE REDACCIÓN\n- Público objetivo: estudiantes de MBA.\n- Duración máxima del guion: 30 segundos al ser leído en voz alta.\n- Primera frase: debe generar curiosidad inmediata (curiosity gap).\n- El guion debe sonar como una presentación académica breve y profesional.\n- Menciona solo lo esencial del caso: nombre, tema central y dilema estratégico clave.\n- Tono: profesional, motivador y con autoridad, invitando al análisis y la reflexión.\n- Finaliza con una transición corta hacia la discusión del caso.\n- La descripción de la **imagen de fondo** debe ser breve, visual, realista y relacionada con el contexto del caso.\n- **NO** incluyas notas técnicas, explicaciones internas ni formato JSON.\n- Devuelve únicamente el guion y la descripción de la imagen.\n\n# OUTPUT\nGuion + descripción de imagen de fondo.\n\n---\n\n\n# TASK 2: RESUMEN E INTRODUCCIÓN DEL CASO (AVATAR METODOLÓGICO)\n1. Analiza cuidadosamente el contenido del PDF proporcionado.\n2. Escribe el **guion hablado del avatar** para el **Resumen e Introducción del Caso**.\n3. Este guion debe preparar a los estudiantes para el análisis y explicar la metodología que se utilizará en el curso.\n\n# DIRECTRICES DE REDACCIÓN\n- Público objetivo: estudiantes de MBA.\n- Duración: entre 2 y 3 minutos al ser leído en voz alta.\n- Tono: académico, claro, motivador y con autoridad docente.\n- Estilo narrativo: frases cortas, con pausas dramáticas, repeticiones retóricas y enumeraciones que generen énfasis. Debe sonar como un discurso que mezcla explicación académica con storytelling.\n- Inicio: enfatiza que **“esta no es una decisión cualquiera”**, recordando una apuesta estratégica previa de la empresa (ej. inversión de 45 millones en I+D cuando apenas generaba flujo de caja).\n- Desarrollo: describe cómo ahora los competidores reaccionan (menciona nombres concretos de rivales relevantes en la industria).\n- Metodología: explica explícitamente qué herramientas se usarán:\n  - PESTEL (entorno regulatorio y macroeconómico).\n  - Cinco Fuerzas de Porter (competencia e industria).\n  - DAFO (fortalezas, debilidades, oportunidades, amenazas).\n  - Matriz CAME (generación de alternativas estratégicas).\n- Innovación pedagógica: destaca que se usará ChatGPT como apoyo, no para decidir por los estudiantes, sino para generar alternativas estratégicas y nuevas perspectivas.\n- Cierre: debe motivar al estudiante con preguntas retóricas e invitación al reto académico. Termina con un llamado inspirador: **“Comencemos con la historia de…”**.\n- **NO** incluyas notas técnicas ni formato JSON.\n- Devuelve únicamente el guion del avatar, con párrafos cortos y estilo oratorio.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": ""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        80,
        624
      ],
      "id": "57c44ca5-16e8-4f93-8db9-90831ac0170d",
      "name": "HeyGen Agent"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"heygen_api_key\": \"ZTY1MzdhODZkMWQ2NGY5OThjYmNiMGI4M2U5ZGI5MjQtMTc1ODgxMDgwNw==\",\n  \"avatar_id\": \"Kristin_public_2_20240108\",\n  \"voice_id\": \"689f48196a9a43c4bbbb67c14fdbb4c6\",\n  \"has_background_video\": true,\n  \"background_video_url\": \"https://as1.ftcdn.net/v2/jpg/06/19/29/94/1000_F_619299409_jTzGQnM9aNVibWaKfd523kqpI8edMZy0.jpg\"\n}\n",
        "options": {}
      },
      "id": "97c12109-cf59-4657-ab9a-d81cdf712663",
      "name": "Setup Heygen",
      "type": "n8n-nodes-base.set",
      "position": [
        432,
        624
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v2/video/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Api-Key",
              "value": "={{ $('Setup Heygen').item.json.heygen_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"Kristin_public_2_20240108\",\n        \"avatar_style\": \"normal\",\n        \"scale\": 1.0\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $('HeyGen Agent').item.json.output.intro_video.voice.input_text }}\",\n        \"voice_id\": \"689f48196a9a43c4bbbb67c14fdbb4c6\",\n        \"speed\": 1.1,\n        \"pitch\": 50,\n        \"emotion\": \"Excited\"\n      },\n      \"background\": {\n        \"type\": \"image\",\n        \"url\": \"https://as1.ftcdn.net/v2/jpg/06/19/29/94/1000_F_619299409_jTzGQnM9aNVibWaKfd523kqpI8edMZy0.jpg\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 1280,\n    \"height\": 720\n  },\n  \"aspect_ratio\": \"16:9\",\n  \"caption\": \"true\",\n  \"title\": \"{{ $('HeyGen Agent').item.json.output.intro_video.title }}\"\n}\n",
        "options": {}
      },
      "id": "c230c5de-1d18-42a5-a384-97c26aa7b3c8",
      "name": "Create Case Intro",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        656,
        528
      ],
      "typeVersion": 4.2,
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.heygen.com/v2/video/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Api-Key",
              "value": "={{ $('Setup Heygen').item.json.heygen_api_key }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"video_inputs\": [\n    {\n      \"character\": {\n        \"type\": \"avatar\",\n        \"avatar_id\": \"Kristin_public_2_20240108\",\n        \"avatar_style\": \"normal\",\n        \"scale\": 1.0\n      },\n      \"voice\": {\n        \"type\": \"text\",\n        \"input_text\": \"{{ $('HeyGen Agent').item.json.output.close_video.voice.input_text }}\",\n        \"voice_id\": \"689f48196a9a43c4bbbb67c14fdbb4c6\",\n        \"speed\": 1.1,\n        \"pitch\": 50,\n        \"emotion\": \"Excited\"\n      },\n      \"background\": {\n        \"type\": \"image\",\n        \"url\": \"https://as1.ftcdn.net/v2/jpg/06/19/29/94/1000_F_619299409_jTzGQnM9aNVibWaKfd523kqpI8edMZy0.jpg\"\n      }\n    }\n  ],\n  \"dimension\": {\n    \"width\": 1280,\n    \"height\": 720\n  },\n  \"aspect_ratio\": \"16:9\",\n  \"caption\": \"true\",\n  \"title\": \"{{ $('HeyGen Agent').item.json.output.close_video.title }}\"\n}\n",
        "options": {}
      },
      "id": "77acc4b4-4621-4b6f-b9c7-0ca4bdc9bc2c",
      "name": "Create Case Close",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        656,
        720
      ],
      "typeVersion": 4.2,
      "disabled": true
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"intro_video\": {\n    \"title\": \"Introducción al Avatar Virtual\",\n    \"voice\": {\n      \"input_text\": \"Hola, bienvenidos a este video de prueba. ¡Estoy muy emocionada de compartir esta demo contigo!\"\n    }\n  },\n  \"close_video\": {\n    \"title\": \"Cierre del Video\",\n    \"voice\": {\n      \"input_text\": \"Gracias por ver este video. ¡Espero que te haya gustado y nos vemos en la próxima!\"\n    }\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        224,
        848
      ],
      "id": "9cff9c92-e850-481f-bb8b-034bb4e54c8e",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "model": "text-embedding-3-large",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        896,
        1424
      ],
      "id": "f8f4bfdd-24c5-459e-896b-ccb8321d727d",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolName": "knowledge_base",
        "toolDescription": "Use this knowledge base to answer questions from the user",
        "memoryKey": {
          "__rl": true,
          "mode": "list",
          "value": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        528,
        1392
      ],
      "id": "0194c3c5-88ca-4bc6-8d51-eb0b8bfa17b1",
      "name": "Query Data Tool"
    },
    {
      "parameters": {
        "mode": "insert",
        "memoryKey": {
          "__rl": true,
          "value": "vector_store_key",
          "mode": "list",
          "cachedResultName": "vector_store_key"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreInMemory",
      "typeVersion": 1.2,
      "position": [
        896,
        1200
      ],
      "id": "3c5b2591-20d1-4669-87c9-b75d5b07c381",
      "name": "Insert Data to Store",
      "notesInFlow": false
    },
    {
      "parameters": {
        "dataType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "typeVersion": 1.1,
      "position": [
        1024,
        1424
      ],
      "id": "e3cb506a-1e4c-4ca5-b6d6-eac508debf36",
      "name": "Default Data Loader"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-29T09:05:38.194Z",
      "updatedAt": "2025-09-29T09:05:38.194Z",
      "role": "workflow:owner",
      "workflowId": "by2mTzdQlJ16JsY5",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-30T09:51:06.000Z",
  "versionId": "c35b4369-0ad2-4d72-b8fc-f788a99f0c36"
}