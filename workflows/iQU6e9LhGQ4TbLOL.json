{
  "active": false,
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Create a row",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Create a row1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a row1": {
      "main": [
        [
          {
            "node": "Get many rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Create a row1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-25T12:01:20.980Z",
  "id": "iQU6e9LhGQ4TbLOL",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Supabase + IA",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        0,
        0
      ],
      "id": "5c53ed68-be97-44a9-9799-3d70e0b9ef7b",
      "name": "When chat message received",
      "webhookId": "161ee4a5-19bd-43c3-83fc-1dea2d07cd9a"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant, we will insert data on my supabase database.\nMy schema is:\n-- Crear tipos ENUM\nCREATE TYPE sexo_enum AS ENUM ('masculino', 'femenino', 'otro');\nCREATE TYPE tipo_deporte_enum AS ENUM ('correr', 'nadar', 'ciclismo', 'nutricion');\nCREATE TYPE estado_entrenamiento_enum AS ENUM ('pendiente', 'completado', 'no_completado');\nCREATE TYPE especialidad_agente_enum AS ENUM ('correr', 'nadar', 'ciclismo', 'nutricion');\n\n-- Tabla USUARIOS\nCREATE TABLE usuarios (\n    id SERIAL PRIMARY KEY,\n    nombre VARCHAR(100) NOT NULL,\n    apellidos VARCHAR(100) NOT NULL,\n    email VARCHAR(255) UNIQUE NOT NULL,\n    password_hash VARCHAR(255) NOT NULL,\n    fecha_nacimiento DATE NOT NULL,\n    peso DECIMAL(5,2), -- ej: 75.50 kg\n    altura DECIMAL(4,2), -- ej: 1.75 m\n    sexo sexo_enum NOT NULL,\n    fecha_registro TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    activo BOOLEAN DEFAULT true,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Tabla AGENTES_IA\nCREATE TABLE agentes_ia (\n    id SERIAL PRIMARY KEY,\n    especialidad especialidad_agente_enum NOT NULL UNIQUE,\n    nombre VARCHAR(100) NOT NULL,\n    descripcion TEXT,\n    activo BOOLEAN DEFAULT true,\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Tabla PLANES_ENTRENAMIENTO\nCREATE TABLE planes_entrenamiento (\n    id SERIAL PRIMARY KEY,\n    usuario_id INTEGER NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    agente_creador_id INTEGER NOT NULL REFERENCES agentes_ia(id),\n    nombre VARCHAR(200) NOT NULL,\n    descripcion TEXT,\n    fecha_inicio DATE NOT NULL,\n    fecha_fin DATE NOT NULL,\n    activo BOOLEAN DEFAULT true,\n    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Tabla ENTRENAMIENTOS\nCREATE TABLE entrenamientos (\n    id SERIAL PRIMARY KEY,\n    usuario_id INTEGER NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    plan_id INTEGER REFERENCES planes_entrenamiento(id) ON DELETE SET NULL,\n    tipo_deporte tipo_deporte_enum NOT NULL,\n    titulo VARCHAR(200) NOT NULL,\n    descripcion TEXT,\n    fecha_planificada DATE NOT NULL,\n    fecha_inicio TIMESTAMP WITH TIME ZONE,\n    fecha_fin TIMESTAMP WITH TIME ZONE,\n    estado estado_entrenamiento_enum DEFAULT 'pendiente',\n    duracion_minutos INTEGER,\n    notas TEXT,\n    metricas_basicas JSONB,\n    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Tabla OBJETIVOS\nCREATE TABLE objetivos (\n    id SERIAL PRIMARY KEY,\n    usuario_id INTEGER NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    titulo VARCHAR(200) NOT NULL,\n    descripcion TEXT,\n    tipo_deporte tipo_deporte_enum,\n    fecha_objetivo DATE,\n    completado BOOLEAN DEFAULT false,\n    fecha_creacion TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Tabla CONVERSACIONES_IA\nCREATE TABLE conversaciones_ia (\n    id SERIAL PRIMARY KEY,\n    usuario_id INTEGER NOT NULL REFERENCES usuarios(id) ON DELETE CASCADE,\n    agente_ia_id INTEGER NOT NULL REFERENCES agentes_ia(id),\n    mensaje_usuario TEXT NOT NULL,\n    respuesta_ia TEXT NOT NULL,\n    timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Crear índices para optimizar consultas\nCREATE INDEX idx_usuarios_email ON usuarios(email);\nCREATE INDEX idx_usuarios_activo ON usuarios(activo);\n\nCREATE INDEX idx_entrenamientos_usuario ON entrenamientos(usuario_id);\nCREATE INDEX idx_entrenamientos_fecha ON entrenamientos(fecha_planificada);\nCREATE INDEX idx_entrenamientos_estado ON entrenamientos(estado);\nCREATE INDEX idx_entrenamientos_tipo ON entrenamientos(tipo_deporte);\n\nCREATE INDEX idx_planes_usuario ON planes_entrenamiento(usuario_id);\nCREATE INDEX idx_planes_activo ON planes_entrenamiento(activo);\n\nCREATE INDEX idx_objetivos_usuario ON objetivos(usuario_id);\nCREATE INDEX idx_objetivos_completado ON objetivos(completado);\n\nCREATE INDEX idx_conversaciones_usuario ON conversaciones_ia(usuario_id);\nCREATE INDEX idx_conversaciones_agente ON conversaciones_ia(agente_ia_id);\nCREATE INDEX idx_conversaciones_timestamp ON conversaciones_ia(timestamp);\n\n-- Función para actualizar updated_at automáticamente\nCREATE OR REPLACE FUNCTION update_updated_at_column()\nRETURNS TRIGGER AS $$\nBEGIN\n    NEW.updated_at = NOW();\n    RETURN NEW;\nEND;\n$$ language 'plpgsql';\n\n-- Triggers para updated_at\nCREATE TRIGGER update_usuarios_updated_at BEFORE UPDATE ON usuarios\n    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_entrenamientos_updated_at BEFORE UPDATE ON entrenamientos\n    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_planes_updated_at BEFORE UPDATE ON planes_entrenamiento\n    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\n\nCREATE TRIGGER update_objetivos_updated_at BEFORE UPDATE ON objetivos\n    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();\n\n-- Insertar agentes IA por defecto\nINSERT INTO agentes_ia (especialidad, nombre, descripcion) VALUES \n('correr', 'Coach Running', 'Especialista en entrenamientos de carrera y running'),\n('nadar', 'Coach Swimming', 'Experto en técnicas y entrenamientos de natación'),\n('ciclismo', 'Coach Cycling', 'Especialista en ciclismo de ruta y entrenamiento'),\n('nutricion', 'Nutricionista AI', 'Asesor nutricional especializado en deportes');\n\n-- Habilitar Row Level Security (RLS) para seguridad\nALTER TABLE usuarios ENABLE ROW LEVEL SECURITY;\nALTER TABLE entrenamientos ENABLE ROW LEVEL SECURITY;\nALTER TABLE planes_entrenamiento ENABLE ROW LEVEL SECURITY;\nALTER TABLE objetivos ENABLE ROW LEVEL SECURITY;\nALTER TABLE conversaciones_ia ENABLE ROW LEVEL SECURITY;\n\n-- Políticas RLS básicas (los usuarios solo ven sus propios datos)\nCREATE POLICY \"Usuarios pueden ver solo sus datos\" ON usuarios\n    FOR ALL USING (auth.uid()::text = id::text);\n\nCREATE POLICY \"Usuarios pueden ver solo sus entrenamientos\" ON entrenamientos\n    FOR ALL USING (auth.uid()::text = usuario_id::text);\n\nCREATE POLICY \"Usuarios pueden ver solo sus planes\" ON planes_entrenamiento\n    FOR ALL USING (auth.uid()::text = usuario_id::text);\n\nCREATE POLICY \"Usuarios pueden ver solo sus objetivos\" ON objetivos\n    FOR ALL USING (auth.uid()::text = usuario_id::text);\n\nCREATE POLICY \"Usuarios pueden ver solo sus conversaciones\" ON conversaciones_ia\n    FOR ALL USING (auth.uid()::text = usuario_id::text);\n\n-- Agentes IA son de solo lectura para todos los usuarios autenticados\nALTER TABLE agentes_ia ENABLE ROW LEVEL SECURITY;\nCREATE POLICY \"Agentes IA visibles para usuarios autenticados\" ON agentes_ia\n    FOR SELECT USING (auth.role() = 'authenticated');\n\n-- Comentarios para documentación\nCOMMENT ON TABLE usuarios IS 'Información básica de los usuarios de la aplicación';\nCOMMENT ON TABLE agentes_ia IS 'Definición de los diferentes agentes IA especializados';\nCOMMENT ON TABLE entrenamientos IS 'Registro de todos los entrenamientos planificados y realizados';\nCOMMENT ON TABLE planes_entrenamiento IS 'Planes de entrenamiento generados por la IA';\nCOMMENT ON TABLE objetivos IS 'Objetivos deportivos definidos por los usuarios';\nCOMMENT ON TABLE conversaciones_ia IS 'Historial de conversaciones con los agentes IA';\n\nCOMMENT ON COLUMN entrenamientos.metricas_basicas IS 'JSON con métricas específicas según el tipo de deporte';\nCOMMENT ON COLUMN entrenamientos.estado IS 'Estado del entrenamiento: pendiente, completado o no_completado';"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        208,
        0
      ],
      "id": "c2746e97-4f86-4fb0-b144-baef98236b7c",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5",
          "mode": "list",
          "cachedResultName": "gpt-5"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        80,
        208
      ],
      "id": "f5a39d58-23bb-47bd-91d2-0f612e9b0a18",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "planes_entrenamiento",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "usuario_id"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        560,
        0
      ],
      "id": "85e70cc0-6173-40df-9ea3-065a528b583d",
      "name": "Create a row",
      "credentials": {
        "supabaseApi": {
          "id": "hQzQNzIN13lv1Hrz",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"id\": 1,\n  \"usuario_id\": 42,\n  \"agente_creador_id\": 3,\n  \"nombre\": \"Plan de fuerza inicial\",\n  \"descripcion\": \"Rutina de entrenamiento enfocada en fuerza y resistencia.\",\n  \"fecha_inicio\": \"2025-10-01\",\n  \"fecha_fin\": \"2025-12-31\",\n  \"activo\": true,\n  \"fecha_creacion\": \"2025-09-25T14:30:00Z\",\n  \"created_at\": \"2025-09-25T14:30:00Z\",\n  \"updated_at\": \"2025-09-25T14:30:00Z\"\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        384,
        208
      ],
      "id": "7a252688-1fab-4bf3-afd2-fe33963e553f",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "GPT-3.5-TURBO"
        },
        "messages": {
          "values": [
            {
              "content": "hola, responde solo con un nombre aleatorio, tu respuesta solo debe contener un nombre aleatorio."
            },
            {}
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        176,
        1088
      ],
      "id": "04251802-d076-4698-8fd2-08dc9c681652",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -80,
        1072
      ],
      "id": "065df1c3-000d-4eea-ad80-44b9ff020cbb",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "https://desktop.captions.ai/api",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBasicAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        256,
        896
      ],
      "id": "0705a075-d398-4792-9e12-b04bef011d22",
      "name": "HTTP Request",
      "credentials": {
        "httpBasicAuth": {
          "id": "KZ4vS1qcpNcldqDi",
          "name": "Unnamed credential"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        48,
        1312
      ],
      "id": "376bca3b-7214-430c-b5b4-b0fb69cbf2a4",
      "name": "GensPark"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        48,
        1472
      ],
      "id": "072b28cb-4364-4426-8926-8304e41992ef",
      "name": "Manus"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "prueba",
        "returnAll": true
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        832,
        1056
      ],
      "id": "7ce07ca3-b359-4150-89f4-8977182b702b",
      "name": "Get many rows",
      "credentials": {
        "supabaseApi": {
          "id": "hQzQNzIN13lv1Hrz",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "prueba",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "name",
              "fieldValue": "={{ $json.message.content }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        608,
        1056
      ],
      "id": "15dd1a78-af76-4fd7-b5f3-255481550eea",
      "name": "Create a row1",
      "credentials": {
        "supabaseApi": {
          "id": "hQzQNzIN13lv1Hrz",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You recieve this names: {{ $json.name }}\nWrite one more name that is not on the list\nThe answer is just a name",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a helpful assistant"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1152,
        1056
      ],
      "id": "f8094adf-a397-4012-b70c-41a7e819cdbf",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1120,
        1280
      ],
      "id": "dafb8f33-0ee4-4867-884d-021152dcd629",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "nmk2GFM41ZOhRE5f",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Este es el otro que tenía ->"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -384,
        896
      ],
      "typeVersion": 1,
      "id": "41aa57cb-f581-4b77-883b-b4cf883b2198",
      "name": "Sticky Note"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-25T12:01:20.992Z",
      "updatedAt": "2025-09-25T12:01:20.992Z",
      "role": "workflow:owner",
      "workflowId": "iQU6e9LhGQ4TbLOL",
      "projectId": "k1NZeG3qHb8L8scP"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-26T09:49:11.000Z",
  "versionId": "191744b7-2cc0-466b-b912-e5dea179963e"
}